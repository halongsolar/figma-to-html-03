* {
  /*  giúp kích thước phần tử bao gồm padding và border, đơn giản hóa bố cục CSS. */
  box-sizing: border-box;
}

:root {
  --headre-bg: #10375c;
}
html {
  /* Thiết lập 1rem = 10px */
  font-size: 62.5%;
}

body {
  /* Tức là 16px, kích thước font mặc định mong muốn cho body */
  font-size: 1.6rem;

  font-family: "Sora", sans-serif;
}

/* =================common================ */
.container {
  width: 1170px;

  /* thiết lập chiều rộng tối thiểu container sử dụng hàm calc() để tính toán giá trị này một cách động. --> khi thu trang web sẽ không bị mất chữ */
  max-width: calc(100% - 48px);
  /* căn giữa một khối container */
  margin: 0 auto;
}

a {
  /* bỏ gạch chân các thẻ a */
  text-decoration: none;
}

/* cấu hình trung cho các nút giống có số liệu giống nhau và nút sing up sau đó sẽ sửa nút sing up riêng */
.btn {
  display: inline-block;
  min-width: 205px;
  line-height: 60px;
  background: #2e80ce;
  color: #fff;
  text-align: center;
  font-size: 1.8rem;
  font-style: normal;
  font-weight: 400;
  border-radius: 999px;
}

/* được sử dụng để áp dụng các kiểu (styles) cho một phần tử khi con trỏ chuột của người dùng di chuyển qua phần tử đó */
.btn:hover {
  /* là một thuộc tính CSS được sử dụng để kiểm soát độ trong suốt của một phần tử. */
  opacity: 0.9;
}

.section-heading {
  color: #10375c;
  font-size: 5rem;
  font-weight: 600;
  line-height: 1.2; /* 120% */
  letter-spacing: -1px;
}

.section-desc {
  color: #575f66;
  font-size: 1.8rem;
  font-weight: 300;
  line-height: 1.67; /* 166.667% */
}

/* control btn */
.control {
  display: flex;
  column-gap: 18px;
  align-items: center;
}

.control__btn {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 1px solis, #575f66;
  background: #fff;
  cursor: pointer;
  transition: 0.25s;
}

.control-icon--next {
  rotate: 180deg;
}

.control__btn:hover {
  background: #2e80ce;
  background-color: #2e80ce;
  color: #fff;
}
/* =================header================ =*/
.header {
  padding-top: 30px;
  /* Màu nền của header */
  background: var(--headre-bg);

  /* chiều cao tối thiểu của một phần tử sẽ bằng 100% chiều cao của khung nhìn */
  min-height: 100vh;
}

.header-top {
  /* xoay ngang các thẻ  */
  display: flex;
  /* phân bổ các thẻ đầu tiên nằm sát điểm bắt đầu và mục cuối nằm sát điểm kết thúc của container các điểm giữa được phân bổ với khoảng trống đều nhau ở giữa */
  justify-content: space-between;

  /* Căn giữa trục dọc header-top */
  align-items: center;
}

.navbar__list {
  /* xoay ngang các thẻ trong khối navbar__list */
  display: flex;
}

.header__action--login,
.navbar__link {
  padding: 8px 21px;
  color: #c9d2da;
  font-size: 1.6rem;
  font-style: normal;
  font-weight: 300;
  line-height: 1.75; /* 175% */
}
/* :hover: Đây là pseudo-class, được thêm vào sau bộ chọn, đại diện cho trạng thái mà phần tử đó đang được "hover" (di chuột qua). */
.navbar__link:hover,
.navbar__link--active {
  /* tăng hiệu ứng bóng đổ nhưng không làm ảnh hưởng các thẻ bên cạnh */
  text-shadow: 1px 0 0 currentColor;
  color: #fff;
}

/* ::before để tạo một phần tử con đặc biệt nằm ngay trước nội dung của phần tử gốc mà không cần phải thêm nó vào mã HTML */
.navbar__link--active::before {
  content: "";

  /* để icon nhận được kích thước */
  display: inline-block;
  width: 6px;
  height: 6px;

  /* để làm cong các góc của một phần tử, tạo thành hình tròn hoặc bầu dục. Khi bạn đặt giá trị 50%, điều này có nghĩa là bán kính cong sẽ bằng một nửa chiều rộng và một nửa chiều cao của phần tử. */
  border-radius: 50%;
  background: #fff;
  top: -3px;
  /* Để di chuyển icon bằng các thuộc tính: top, right, bottom, left mà icon vẫn chiếm không gian ban đâu của nó trong bố cục */
  position: relative;
  right: 8px;
}

.header__action--signup {
  min-width: 144px;
  line-height: 44px;
  font-size: 1.6rem;
}

.header__action--login {
  margin-right: 7px;
}

/* ===============hero============= */

.hero {
  /* Xoay ngang hai khối left và right */
  display: flex;
  /* cách khối trên 76px */
  padding-top: 76px;

  /* căn giữa chiều dọc */
  align-items: center;
}

.hero__content {
  /* chiếm 44% khoảng không gian trong thẻ hero */
  width: 44%;
}

.hero__media {
  /* chiếm hết khoảng không gian còn lại */
  flex: 1;
}

.hero__heading {
  color: #fff;
  font-size: 7rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.14;
  letter-spacing: -1.4px;
}

.hero_desc {
  /* cách bên trên là 22px */
  margin-top: 22px;
  color: #c9d2da;
  font-size: 1.8rem;
  font-weight: 300;
  line-height: 1.67; /* 166.667% */
}

.hero__row {
  /* cách khối trên 38 */
  margin-top: 38px;
  /* Bỏ khoảng cách mặt định giữa 2 thẻ trong khối hero__row */
  display: flex;
  align-items: center;
  /* khoảng cách giưa 2 thẻ trong khối hero__row */
  column-gap: 38px;
}

.hero__phone {
  color: #fff;
  text-align: center;
  font-size: 1.8rem;
  line-height: 1.67; /* 166.667% */
}

.hero__images {
  /* xoay ngang 2 bức ảnh */
  display: flex;

  /* Căn giữa 2 bức ảnh trong thẻ hero */
  align-items: center;

  /* dồn 2 bức ảnh sang bên phải của thẻ hero */
  justify-content: flex-end;
}

.hero__img {
  border-radius: 6px;

  /* Lệnh không để méo ảnh */
  object-fit: cover;
}
.hero__img-large {
  width: 330px;
  height: 540px;
  margin-right: -6px;
  z-index: 1;
}

.hero__img-small {
  width: 210px;
  height: 410px;
}

/* =============== Service ============= */
.service {
  padding: 170px 0;
  background: #fff;
}

.service__heading,
.service__desc {
  text-align: center;
}

.service__desc {
  width: 468px;
  /* margin: 0 auto; là một thủ thuật CSS cực kỳ phổ biến để căn giữa một khối (block-level element) theo chiều ngang bên trong phần tử chứa nó.
margin: 0 auto; hoạt động thế nào?
0: Đặt lề trên (margin-top) và lề dưới (margin-bottom) bằng 0. Tức là không có khoảng cách nào ở phía trên và phía dưới do lề.
auto: Đặt lề trái (margin-left) và lề phải (margin-right) tự động. Khi bạn đặt auto cho lề hai bên của một phần tử khối có chiều rộng cố định, trình duyệt sẽ tự động chia đều khoảng trống còn lại ở cả hai phía, từ đó đẩy phần tử đó vào giữa container của nó. */
  margin: 18px auto 0;
}

.service__row {
  margin-top: 70px;
  /* xoay ngang các thẻ trong service__row */
  display: flex;
  /* giãn 2 thẻ trong khối service__row ra hai đầu trái phải */
  justify-content: space-between;
  /* căn giữ 2 thẻ theo chiều dọc trong khối service */
  align-items: center;
}

.service__img {
  width: 570px;
  height: 570px;

  /* border-radius: 12px; là một thuộc tính CSS dùng để làm cong các góc của một phần tử HTML */
  border-radius: 12px;

  /* Khi bạn đặt object-fit: cover; cho một hình ảnh hoặc video, nó có nghĩa là: Phần tử sẽ bao phủ toàn bộ vùng chứa: Hình ảnh hoặc video sẽ được điều chỉnh kích thước (cả chiều rộng và chiều cao) để lấp đầy hoàn toàn vùng chứa của nó. */
  object-fit: cover;
}

.service-item {
  /* Khi bạn đặt padding: 21px;, điều này có nghĩa là phần tử sẽ có 21 pixel khoảng trống ở tất cả bốn phía: trên, dưới, trái và phải, giữa nội dung và viền của nó. */
  padding: 21px;

  /* display: flex; nghĩa là gì? Khi bạn áp dụng display: flex; cho một phần tử, bạn đang nói với trình duyệt rằng: "Hãy sắp xếp các phần tử con trực tiếp của tôi theo mô hình Flexbox." Điều này mang lại cho bạn khả năng kiểm soát rất lớn về cách các phần tử con đó được căn chỉnh, phân bổ không gian và sắp xếp theo nhiều hướng khác nhau. */
  display: flex;
  width: 470px;
  border-radius: 10px;
  background: #fff;

  /* Khi bạn đặt transition: 0.25s; cho một phần tử, bạn đang nói với trình duyệt rằng: "Bất kỳ thay đổi nào của thuộc tính CSS trên phần tử này sẽ diễn ra trong vòng 0.25 giây." */
  transition: 0.25s;
}

.service-item:hover {
  /* Giữ nguyên không gian: Khi bạn đặt position: relative; cho một phần tử, nó vẫn chiếm không gian ban đầu của nó trong bố cục trang. Dù bạn có di chuyển nó bằng top, bottom, left, hoặc right, các phần tử khác xung quanh nó sẽ không dịch chuyển để lấp vào khoảng trống đó. */
  position: relative;
  box-shadow: 0 14px 28px 0 rgba(0, 0, 0, 0.05);
}

.service-item:hover .service-item__icon {
  color: #fff;
  background: #2e80ce;
}
.service-item__icon {
  width: 60px;
  height: 60px;
  border-radius: 30px;
  background: #eff6fd;
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.05);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  margin-right: 19px;
  transition: 0.25s;
}

.service-item__heading {
  color: #10375c;
  font-size: 1.8rem;
  font-weight: 600;
  line-height: normal;
}

.service-item__desc {
  margin-top: 8px;
  color: #575f66;
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.75;
}

.service__btn {
  /* margin-top: 55px; là một thuộc tính CSS dùng để tạo khoảng trống bên ngoài phía trên cùng của một phần tử. */
  margin-top: 55px;
}

/* =============== Work ============= */
.work {
  background: #f6fbff;
  padding: 100px 0;
}

.work__desc {
  /* Giới hạn độ rộng của thẻ work__desc*/
  width: 468px;
}

.work__list {
  margin-top: 86px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: 30px;
}

.work-item {
  /* nội dung bên trong phần tử đó sẽ cách đường viền của nó 43 pixel ở cả bốn phía. hay ns work-item cách work__list là 43 pixel ở cả 4 phía */
  padding: 43px;

  /* Các góc cho các phân tử chung class work-item được làm tròn bằng 4px */
  border-radius: 4px;
  background: #fff;

  /* thêm viên và nét liền viền rộng 16px hay cách solis-là nét liền*/
  border: 16px solid #eaf6ff;
  transition: 0.25s;
}

.work-item:hover {
  /* :hover đổi màu đường viền thẻ item 1 theo dự án  */
  border-color: #2e80ce;

  /* Khi bạn áp dụng transform: translateY(-16px); cho một phần tử HTML, phần tử đó sẽ được dịch chuyển lên trên 16 pixel so với vị trí ban đầu của nó. */
  transform: translateY(-16px);
}

.work-item__heading {
  margin-top: 18px;
  color: #10375c;
  font-size: 2.6rem;
  font-weight: 600;
  line-height: 1.38;
}

.work-item__desc {
  margin-top: 28px;
  color: #575f66;
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.75;
}

.work-item__more {
  margin-top: 18px;
  display: inline-block;
  color: #2e80ce;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.75;
}

/* =============== About ============= */
.about {
  margin-top: 85px;
  padding: 85px 0 206px;
}

.about-row {
  display: flex;
  /* xoay ngan 2 khối trong phân vung about-row */
  justify-content: space-between;
  align-items: center;
}

.about__media {
  width: 49%;
}

.about-conten {
  width: 40%;
}

.about__img {
  /* position: relative; là một thuộc tính trong CSS (Cascading Style Sheets) dùng để thay đổi cách một phần tử được định vị trên trang web */
  position: relative;
}

.about_img--big {
  /* làm mất khoảng hở bên dưới ảnh lớn hay gọi là phần tử about_img--big */
  display: flex;
  object-fit: cover;
  width: 512px;
  height: 370px;
  border-radius: 6px;
  box-shadow: 0 14px 28px 0 rgba(0, 0, 0, 0.07);
}

.about_img--small {
  /* Để căn */
  position: absolute;
  top: 121px;
  left: 238px;
  object-fit: cover;
  width: 332px;
  height: 370px;
  border-radius: 6px;
}

.about-content__btn {
  margin-top: 38px;
}

/* =============== Team ============= */
.team {
  padding: 85px 0;
}

.team-header {
  text-align: center;
  margin: 0 auto;
}

.team_cta {
  margin-top: 38px;
}

.team__list {
  margin-top: 70px;
  column-gap: 30px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}

.team-item__thumb {
  height: 290px;
  min-width: 100%;
  object-fit: cover;
  display: block;
  /* Mọi thay đổi trên bất kỳ thuộc tính CSS nào của phần tử này đều phải diễn ra trong vòng 0.5 giây. */
  transition: 0.5s;
}

.team-item__img-bg {
  border-radius: 6px;
  background: #eaf6ff;
  padding-top: 28px;
  overflow: hidden;
}

/* khi hove vào team-item thì sẽ tác động vao team-item_thumb */
.team-item:hover .team-item__thumb {
  /* phong to hình ảnh được chỉ định to lên 1.1 */
  transform: scale(1.1);
}

.team-item__name {
  margin-top: 12px;
  color: #10375c;
  text-align: center;
  font-size: 1.6rem;
  line-height: 1.75;
}

.team-item__desc {
  color: #575f66;
  text-align: center;
  font-size: 1.4rem;
  line-height: 1.86;
}

.team__control {
  margin-top: 38px;
  justify-content: center;
}

/* =============== Install ============= */

.install__inner {
  margin: 180px 0 85px;
  /* để bức ảnh sát vs chân khối install__inner */
  position: relative;
  display: flex;
  /* xoay ngang hai phần tử chính trong khối install__inner */
  align-items: center;
  /* giãn 2 phần tử chính kịch ra hai đầu  */
  justify-content: space-between;
  /* sau khi giãn phần tử ra đầu thì làm cho 2 phần tử thụt lại so vs 2 đầu một khoảng cách 70px */
  padding: 0 70px;
  height: 472px;
  border-radius: 4px;
  background: #2e80ce;
}

.install__img {
  /* để bức ảnh sát vs chân khối install__inner */
  position: absolute;
  /* để bức ảnh sát vs chân khối install__inner */
  bottom: 0;
  width: 284px;
  height: 522px;
  object-fit: cover;
}

.install__content {
  min-width: 586px;
}

.install__heading {
  color: #fff;
  max-width: 489px;
}

.install__desc {
  margin-top: 18px;
  max-width: 586px;
  color: #fff;
  font-size: 1.8rem;
  font-weight: 300;
  line-height: 1.67;
}

.install__row {
  margin-top: 38px;
  display: flex;
  column-gap: 28px;
}

/* =============== Blocg ============= */
.blog {
  padding: 85px 0;
  background: #fff;
}

.blog__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.blog__content {
  width: 40%;
}

.blog__heading {
  max-width: 470px;
}

.blog__more {
  margin-top: 28px;
  display: inline-block;
  color: #10375c;
  font-size: 1.8rem;
  font-weight: 600;
  line-height: 1.56;
  text-decoration-line: underline;
  /* text-decoration-style: solid; */
  /* text-decoration-skip-ink: none; */
  /* text-decoration-thickness: auto; */
  text-underline-offset: 5px;
  /* text-underline-position: from-font; */
}

.blog__control {
  margin-top: 28px;
  justify-content: flex-start;
}

.blog__list {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: 30px;
}

.blog-item {
  max-width: 270px;
  border-radius: 12px;
  border: 1px solid #e8ebee;
  background: #fff;
  /* chỉnh ảnh không bị chòi ra khỏi khung */
  overflow: hidden;
  transition: 0.5s;
}

/* tạo khung viền khi di chuột vào phần tử thì bị mất khung viền */
.blog-item:hover {
  box-shadow: 0 18px 50px 0 rgba(0, 0, 0, 0.05);
  border-color: transparent;
}

/* di chuột vào bức ảnh sẽ phóng to ra */
.blog-item:hover .blog-item__thumb {
  transform: scale(1.1);
}

.blog-item__thumb {
  width: 270px;
  height: 172px;
  border-radius: 12px 12px 0 0;
  object-fit: cover;
  transition: 0.25s;
}

/* giới hạn chiều cao của thẻ và để overflow: hidden  để ảnh không bị chòi ra khỏi khung  */
.blog-item__wrap {
  height: 172px;
  overflow: hidden;
}

.blog-item__body {
  padding: 18px 22px;
}

.blog-item__heading {
  color: #10375c;
  font-size: 1.6rem;
  font-weight: 600;
  line-height: 1.62;
}
.blog-item__desc {
  margin-top: 10px;
  color: #575f66;
  font-size: 1.4rem;
  font-weight: 300;
  line-height: 1.72;
}

.blog-item__more {
  display: inline-block;
  margin-top: 12px;
  color: #10375c;
  font-size: 1.4rem;
  font-weight: 400;
}
.blog-item__more:hover {
  color: #2e80ce;
}

/* =============== appointment ============= */
.appointment {
  margin: 85px 0;
}

.appointment__inner {
  padding: 100px 178px;
  background: #f6fbff;
  text-align: center;
}
/* .appointment__heading::after là một pseudo-element (phần tử giả) trong CSS, dùng để tạo một phần tử con đặc biệt nằm ngay sau nội dung của phần tử gốc mà không cần thêm vào HTML. */
.appointment__heading::after /* .appointment__heading::after là một pseudo-element (phần tử giả) trong CSS, dùng để tạo một phần tử con đặc biệt nằm ngay sau nội dung của phần tử gốc mà không cần thêm vào HTML. */ {
  content: "";
  display: block;
  width: 136px;
  height: 2px;
  background: #2e80ce;
  margin: 18px auto 0;
}

.appointment__desc {
  margin-top: 18px;
  max-width: 617px;
  margin: 18px auto 0;
}

.appointment__btn{
  margin-top: 38px;
}
